name: Deploy Sphinx to GitHub Pages

on:
  release:
    types: [released]

  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  PYTHON_VERSION: "3.10"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ hashFiles('uv.lock') }}
      id: cache

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync --group dev
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5

    - name: Build docs with Sphinx
      run: uv run make html
      working-directory: docs

    - name: Upload docs
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/build/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
